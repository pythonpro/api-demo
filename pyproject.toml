[project]
name = "funds"
version = "0.1.0"
description = "Demo REST API server"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "django>=5.1.6",
    "django-environ>=0.12.0",
    "django-filter>=25.1",
    "djangorestframework>=3.15.2",
    "djangorestframework-jsonapi>=7.1.0",
    "psycopg[binary]>=3.2.5",
]

[dependency-groups]
dev = [
    "coverage>=7.6.12",
    "isort>=6.0.1",
    "pre-commit>=4.1.0",
    "pytest>=8.3.5",
    "pytest-django>=4.10.0",
    "pytest-mock>=3.14.0",
    "pytest-sugar>=1.0.0",
    "ruff>=0.9.9",
]

[tool.ruff]
exclude = [
  ".eggs",
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ".pytest_cache",
  ".venv",
  "__pypackages__",
]
line-length = 99
indent-width = 4
target-version = "py313"

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
]
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.isort]
profile = "black"
py_version=313
src_paths = ["backend"]
line_length = 99
multi_line_output = 3
